#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

#ifndef KEYMAP_DRAWER

#include "keys_de.h"

#endif

// https://github.com/urob/zmk-helpers/blob/main/include/zmk-helpers/key-labels/eyelash42.h

#include "zmk-helpers/key-labels/eyelash42.h"

#define KEYS_L LT5  LT4  LT3  LT2  LT1  LT0 LM5  LM4  LM3  LM2  LM1  LM0 LB5  LB4  LB3  LB2  LB1  LB0
#define KEYS_R RT0  RT1  RT2  RT3  RT4  RT5 RM0  RM1  RM2  RM3  RM4  RM5 RB0  RB1  RB2  RB3  RB4  RB5
#define THUMBS LH2  LH1 LH0  RH0 RH1 RH2

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    macros {
        reliable_altgr: reliable_altgr {
            compatible = "zmk,behavior-macro-one-param";
            label = "RELIABLE_ALTGR";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp RALT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp RALT>;

            wait-ms = <80>;   // for RDP
            tap-ms = <50>;
        };
    };

    behaviors {
        PrintScreen: PrintScreen {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings =
                <&kp PRINTSCREEN>,
                <&kp LS(PRINTSCREEN)>,
                <&kp LA(PRINTSCREEN)>;
        };

        QEMark: QEMark {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp DE_QUESTION>, <&kp DE_EXCLAMATION>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        ralt_altgr: ralt_altgr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&reliable_altgr>;
        };

        caps_word_de: caps_word_de {
            compatible = "zmk,behavior-caps-word-de";
            #binding-cells = <0>;
            continue-list = <DE_UNDERSCORE DE_MINUS>;
        };

        // https://github.com/urob/zmk-config?tab=readme-ov-file

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>; // List of keys on the right side of the keyboard
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };

        BsDel: BsDel {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BONEish";
            bindings = <
&kp ESC  &kp J            &kp D                &kp U         &kp A              &kp X                                 &kp C_VOLUME_UP              &kp P             &kp H               &kp L     &kp M                 &kp W             &kp PRINTSCREEN
&kp TAB  &hml LEFT_ALT C  &hml LEFT_CONTROL T  &lt 3 I       &hml LEFT_SHIFT E  &hml LEFT_GUI O           &kp C_PREV  &kp C_MUTE       &kp C_NEXT  &hmr RIGHT_GUI B  &hmr RIGHT_SHIFT N  &lt 3 R   &hmr RIGHT_CONTROL S  &hmr RIGHT_ALT G  &kp DE_DOUBLE_QUOTES
&to 0    &QEMark          &kp DE_COMMA         &kp V         &kp F              &kp Q            &none                &kp C_VOL_DN                 &kp DE_Y          &kp K               &kp DE_Z  &kp DE_DOT            &kp DE_MINUS      &kp DE_SINGLE_QUOTE
                                               &kp LEFT_ALT  &lt 3 DELETE       &lt 1 ENTER                                                        &lt 2 SPACE       &lt 3 BACKSPACE     &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Numbers {
            display-name = "Numbers";
            bindings = <
&trans  &kp F1            &kp F2                &kp F3        &kp F4              &kp F5                            &none         &kp F6             &kp F7               &kp F8        &kp F9                 &kp F10            &kp F11
&trans  &hml LEFT_ALT N1  &hml LEFT_CONTROL N2  &lt 3 N3      &hml LEFT_SHIFT N4  &hml LEFT_GUI N5           &none  &none  &none  &hmr RIGHT_GUI N6  &hmr RIGHT_SHIFT N7  &lt 3 N8      &hmr RIGHT_CONTROL N9  &hmr RIGHT_ALT N0  &kp F12
&trans  &kp DE_EURO       &kp DE_COMMA          &kp DE_SLASH  &kp DE_ASTRK        &kp DE_EQUAL      &none           &none         &kp DE_PERCENT     &kp DE_PLUS          &kp DE_MINUS  &kp DE_DOT             &kp DE_DOLLAR      &kp DE_SECTION
                                                &trans        &trans              &trans                                          &trans             &trans               &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Symbols {
            display-name = "Symbols";
            bindings = <
&trans  &kp DE_LT               &kp DE_GRAVE                     &kp DE_U_UMLAUT  &kp DE_A_UMLAUT           &kp DE_DEG                                        &kp C_VOLUME_UP                        &kp LG(SPACE)           &reliable_altgr DE_LEFT_BRACE         &reliable_altgr DE_RIGHT_BRACE    &kp DE_AMPERSAND          &kp DE_BACKSLASH        &none
&trans  &hml LEFT_ALT DE_EQUAL  &hml LEFT_CONTROL DE_APOSTROPHE  &lt 3 DE_TILDE   &hml LEFT_SHIFT DE_EURO   &hml LEFT_GUI DE_O_UMLAUT           &kp C_REWIND  &kp C_PLAY_PAUSE   &kp C_FAST_FORWARD  &hmr RIGHT_GUI DE_HASH  &hmr RIGHT_SHIFT DE_LEFT_PARENTHESIS  &lt 3 DE_RIGHT_PARENTHESIS        &hmr RIGHT_CONTROL DE_SZ  &hmr RIGHT_ALT DE_PIPE  &none
&trans  &kp DE_GT               &kp DE_ACUTE                     &kp DE_CARET     &reliable_altgr DE_TILDE  &reliable_altgr DE_AT      &none                  &kp C_VOLUME_DOWN                      &none                   &reliable_altgr DE_LEFT_BRACKET       &reliable_altgr DE_RIGHT_BRACKET  &kp DE_EQUAL              &kp DE_SLASH            &none
                                                                 &trans           &trans                    &trans                                                                                   &trans                  &trans                                &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Command {
            display-name = "Command";
            bindings = <
&trans       &kp LC(Q)  &kp LC(W)  &none      &kp LC(A)     &kp LG(R)                              &mmv MOVE_UP                     &kp LC(HOME)     &kp HOME       &kp END    &kp PG_UP   &kp PG_DN       &kp RC(END)
&kp LA(TAB)  &kp LALT   &kp LCTRL  &none      &kp LSHFT     &kp LEFT_GUI           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LC(PAGE_UP)  &kp LEFT       &kp RIGHT  &kp UP      &kp DOWN        &kp RC(PAGE_DOWN)
&trans       &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(DE_Z)  &kp LC(DE_Y)  &none                    &mmv MOVE_DOWN                   &key_repeat      &caps_word_de  &kp CAPS   &kp INSERT  &kp SCROLLLOCK  &kp PAUSE_BREAK
                                   &trans     &trans        &trans                                                                  &trans           &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        System {
            display-name = "System";
            bindings = <
&out OUT_TOG    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2       &bt BT_SEL 3  &bt BT_SEL 4                              &mmv MOVE_UP                     &to 0            &to 1            &to 2            &to 3            &to 4            &to 0
&bootloader     &sys_reset    &soft_off     &ext_power EP_TOG  &gresc        &rgb_ug RGB_ON            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_COLOR_HSB(182,42,43)
&studio_unlock  &bl BL_TOG    &bl BL_CYCLE  &none              &none         &rgb_ug RGB_OFF  &none                    &mmv MOVE_DOWN                   &rgb_ug RGB_BRD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_COLOR_HSB(0,68,26)
                                            &trans             &trans        &trans                                                                     &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
